// Code generated by 'yaegi extract github.com/noxworld-dev/opennox-lib/script/noxscript/ns'. DO NOT EDIT.

package imports

import (
	"image"
	"reflect"
	"time"

	"github.com/noxworld-dev/opennox-lib/object"
	"github.com/noxworld-dev/opennox-lib/player"
	"github.com/noxworld-dev/opennox-lib/script"
	"github.com/noxworld-dev/opennox-lib/script/noxscript/ns"
	"github.com/noxworld-dev/opennox-lib/script/noxscript/ns/audio"
	"github.com/noxworld-dev/opennox-lib/script/noxscript/ns/class"
	"github.com/noxworld-dev/opennox-lib/script/noxscript/ns/damage"
	"github.com/noxworld-dev/opennox-lib/script/noxscript/ns/effect"
	"github.com/noxworld-dev/opennox-lib/script/noxscript/ns/enchant"
	"github.com/noxworld-dev/opennox-lib/script/noxscript/ns/spell"
	"github.com/noxworld-dev/opennox-lib/script/noxscript/ns/subclass"
	"github.com/noxworld-dev/opennox-lib/types"
)

func init() {
	Symbols["github.com/noxworld-dev/opennox-lib/script/noxscript/ns/ns"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"AnswerGoodbye":        reflect.ValueOf(ns.AnswerGoodbye),
		"AnswerNo":             reflect.ValueOf(ns.AnswerNo),
		"AnswerYes":            reflect.ValueOf(ns.AnswerYes),
		"AudioEvent":           reflect.ValueOf(ns.AudioEvent),
		"AutoSave":             reflect.ValueOf(ns.AutoSave),
		"BecomeEnemy":          reflect.ValueOf(ns.BecomeEnemy),
		"BecomePet":            reflect.ValueOf(ns.BecomePet),
		"Blind":                reflect.ValueOf(ns.Blind),
		"CancelDialog":         reflect.ValueOf(ns.CancelDialog),
		"CastSpell":            reflect.ValueOf(ns.CastSpell),
		"ClearMessages":        reflect.ValueOf(ns.ClearMessages),
		"CreateObject":         reflect.ValueOf(ns.CreateObject),
		"DeathScreen":          reflect.ValueOf(ns.DeathScreen),
		"DestroyEveryChat":     reflect.ValueOf(ns.DestroyEveryChat),
		"DialogFalse":          reflect.ValueOf(ns.DialogFalse),
		"DialogNext":           reflect.ValueOf(ns.DialogNext),
		"DialogNormal":         reflect.ValueOf(ns.DialogNormal),
		"DialogYesNo":          reflect.ValueOf(ns.DialogYesNo),
		"DialogYesNoNext":      reflect.ValueOf(ns.DialogYesNoNext),
		"E":                    reflect.ValueOf(ns.E),
		"Effect":               reflect.ValueOf(ns.Effect),
		"EndGame":              reflect.ValueOf(ns.EndGame),
		"EntryGreen1":          reflect.ValueOf(ns.EntryGreen1),
		"EntryGreen2":          reflect.ValueOf(ns.EntryGreen2),
		"EntryGrey":            reflect.ValueOf(ns.EntryGrey),
		"EntryRed":             reflect.ValueOf(ns.EntryRed),
		"EntryWhite":           reflect.ValueOf(ns.EntryWhite),
		"EntryYellow":          reflect.ValueOf(ns.EntryYellow),
		"EventChangeFocus":     reflect.ValueOf(ns.EventChangeFocus),
		"EventCollision":       reflect.ValueOf(ns.EventCollision),
		"EventDeath":           reflect.ValueOf(ns.EventDeath),
		"EventEndOfWaypoint":   reflect.ValueOf(ns.EventEndOfWaypoint),
		"EventEnemyHeard":      reflect.ValueOf(ns.EventEnemyHeard),
		"EventEnemySighted":    reflect.ValueOf(ns.EventEnemySighted),
		"EventIsHit":           reflect.ValueOf(ns.EventIsHit),
		"EventLookingForEnemy": reflect.ValueOf(ns.EventLookingForEnemy),
		"EventLostEnemy":       reflect.ValueOf(ns.EventLostEnemy),
		"EventRetreat":         reflect.ValueOf(ns.EventRetreat),
		"GetAnswer":            reflect.ValueOf(ns.GetAnswer),
		"GetCaller":            reflect.ValueOf(ns.GetCaller),
		"GetCharacterData":     reflect.ValueOf(ns.GetCharacterData),
		"GetHost":              reflect.ValueOf(ns.GetHost),
		"GetQuestStatus":       reflect.ValueOf(ns.GetQuestStatus),
		"GetQuestStatusFloat":  reflect.ValueOf(ns.GetQuestStatusFloat),
		"GetTrigger":           reflect.ValueOf(ns.GetTrigger),
		"ImmediateBlind":       reflect.ValueOf(ns.ImmediateBlind),
		"IsCaller":             reflect.ValueOf(ns.IsCaller),
		"IsCrown":              reflect.ValueOf(ns.IsCrown),
		"IsGameBall":           reflect.ValueOf(ns.IsGameBall),
		"IsSummoned":           reflect.ValueOf(ns.IsSummoned),
		"IsTalking":            reflect.ValueOf(ns.IsTalking),
		"IsTrading":            reflect.ValueOf(ns.IsTrading),
		"IsTrigger":            reflect.ValueOf(ns.IsTrigger),
		"JournalDelete":        reflect.ValueOf(ns.JournalDelete),
		"JournalEdit":          reflect.ValueOf(ns.JournalEdit),
		"JournalEntry":         reflect.ValueOf(ns.JournalEntry),
		"MakeEnemy":            reflect.ValueOf(ns.MakeEnemy),
		"MakeFriendly":         reflect.ValueOf(ns.MakeFriendly),
		"Music":                reflect.ValueOf(ns.Music),
		"MusicEvent":           reflect.ValueOf(ns.MusicEvent),
		"MusicPopEvent":        reflect.ValueOf(ns.MusicPopEvent),
		"MusicPushEvent":       reflect.ValueOf(ns.MusicPushEvent),
		"N":                    reflect.ValueOf(ns.N),
		"NE":                   reflect.ValueOf(ns.NE),
		"NW":                   reflect.ValueOf(ns.NW),
		"NewTimer":             reflect.ValueOf(ns.NewTimer),
		"NoWallSound":          reflect.ValueOf(ns.NoWallSound),
		"Object":               reflect.ValueOf(ns.Object),
		"ObjectGroup":          reflect.ValueOf(ns.ObjectGroup),
		"OblivionHalberd":      reflect.ValueOf(ns.OblivionHalberd),
		"OblivionHeart":        reflect.ValueOf(ns.OblivionHeart),
		"OblivionOrb":          reflect.ValueOf(ns.OblivionOrb),
		"OblivionWierdling":    reflect.ValueOf(ns.OblivionWierdling),
		"Print":                reflect.ValueOf(ns.Print),
		"PrintToAll":           reflect.ValueOf(ns.PrintToAll),
		"Random":               reflect.ValueOf(ns.Random),
		"RandomFloat":          reflect.ValueOf(ns.RandomFloat),
		"ResetQuestStatus":     reflect.ValueOf(ns.ResetQuestStatus),
		"Runtime":              reflect.ValueOf(ns.Runtime),
		"S":                    reflect.ValueOf(ns.S),
		"SE":                   reflect.ValueOf(ns.SE),
		"SW":                   reflect.ValueOf(ns.SW),
		"SetDialog":            reflect.ValueOf(ns.SetDialog),
		"SetHalberd":           reflect.ValueOf(ns.SetHalberd),
		"SetQuestStatus":       reflect.ValueOf(ns.SetQuestStatus),
		"SetQuestStatusFloat":  reflect.ValueOf(ns.SetQuestStatusFloat),
		"SetRuntime":           reflect.ValueOf(ns.SetRuntime),
		"SetShopkeeperText":    reflect.ValueOf(ns.SetShopkeeperText),
		"StartDialog":          reflect.ValueOf(ns.StartDialog),
		"StartupScreen":        reflect.ValueOf(ns.StartupScreen),
		"StopScript":           reflect.ValueOf(ns.StopScript),
		"StoryPic":             reflect.ValueOf(ns.StoryPic),
		"TellStory":            reflect.ValueOf(ns.TellStory),
		"UnBlind":              reflect.ValueOf(ns.UnBlind),
		"Unknownb8":            reflect.ValueOf(ns.Unknownb8),
		"Unknownb9":            reflect.ValueOf(ns.Unknownb9),
		"Unknownc4":            reflect.ValueOf(ns.Unknownc4),
		"Unused1f":             reflect.ValueOf(ns.Unused1f),
		"Unused20":             reflect.ValueOf(ns.Unused20),
		"Unused50":             reflect.ValueOf(ns.Unused50),
		"Unused58":             reflect.ValueOf(ns.Unused58),
		"Unused59":             reflect.ValueOf(ns.Unused59),
		"Unused5a":             reflect.ValueOf(ns.Unused5a),
		"Unused5b":             reflect.ValueOf(ns.Unused5b),
		"Unused5c":             reflect.ValueOf(ns.Unused5c),
		"Unused5d":             reflect.ValueOf(ns.Unused5d),
		"Unused5e":             reflect.ValueOf(ns.Unused5e),
		"Unused74":             reflect.ValueOf(ns.Unused74),
		"W":                    reflect.ValueOf(ns.W),
		"Wall":                 reflect.ValueOf(ns.Wall),
		"WallGroup":            reflect.ValueOf(ns.WallGroup),
		"Waypoint":             reflect.ValueOf(ns.Waypoint),
		"WaypointGroup":        reflect.ValueOf(ns.WaypointGroup),
		"WideScreen":           reflect.ValueOf(ns.WideScreen),

		// type definitions
		"DialogAnswer":     reflect.ValueOf((*ns.DialogAnswer)(nil)),
		"DialogType":       reflect.ValueOf((*ns.DialogType)(nil)),
		"Direction":        reflect.ValueOf((*ns.Direction)(nil)),
		"EntryType":        reflect.ValueOf((*ns.EntryType)(nil)),
		"Func":             reflect.ValueOf((*ns.Func)(nil)),
		"Game":             reflect.ValueOf((*ns.Game)(nil)),
		"HalberdLevel":     reflect.ValueOf((*ns.HalberdLevel)(nil)),
		"Handle":           reflect.ValueOf((*ns.Handle)(nil)),
		"Implementation":   reflect.ValueOf((*ns.Implementation)(nil)),
		"Obj":              reflect.ValueOf((*ns.Obj)(nil)),
		"ObjGroup":         reflect.ValueOf((*ns.ObjGroup)(nil)),
		"ObjectEvent":      reflect.ValueOf((*ns.ObjectEvent)(nil)),
		"StringID":         reflect.ValueOf((*ns.StringID)(nil)),
		"Timer":            reflect.ValueOf((*ns.Timer)(nil)),
		"WallGroupObj":     reflect.ValueOf((*ns.WallGroupObj)(nil)),
		"WallObj":          reflect.ValueOf((*ns.WallObj)(nil)),
		"WaypointGroupObj": reflect.ValueOf((*ns.WaypointGroupObj)(nil)),
		"WaypointObj":      reflect.ValueOf((*ns.WaypointObj)(nil)),

		// interface wrapper definitions
		"_Func":             reflect.ValueOf((*_github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Func)(nil)),
		"_Game":             reflect.ValueOf((*_github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Game)(nil)),
		"_Handle":           reflect.ValueOf((*_github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Handle)(nil)),
		"_Implementation":   reflect.ValueOf((*_github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation)(nil)),
		"_Obj":              reflect.ValueOf((*_github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj)(nil)),
		"_ObjGroup":         reflect.ValueOf((*_github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup)(nil)),
		"_Timer":            reflect.ValueOf((*_github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Timer)(nil)),
		"_WallGroupObj":     reflect.ValueOf((*_github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WallGroupObj)(nil)),
		"_WallObj":          reflect.ValueOf((*_github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WallObj)(nil)),
		"_WaypointGroupObj": reflect.ValueOf((*_github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WaypointGroupObj)(nil)),
		"_WaypointObj":      reflect.ValueOf((*_github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WaypointObj)(nil)),
	}
}

// _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Func is an interface wrapper for Func type
type _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Func struct {
	IValue interface{}
}

// _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Game is an interface wrapper for Game type
type _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Game struct {
	IValue             interface{}
	WAudioEffect       func(name string, pos script.Positioner)
	WBlindPlayers      func(blind bool)
	WCinemaPlayers     func(v bool)
	WConsole           func(error bool) script.Printer
	WFrame             func() int
	WGlobal            func() script.Printer
	WHostPlayer        func() script.Player
	WNoxScript         func() ns.Implementation
	WObjectByID        func(id string) script.Object
	WObjectGroupByID   func(id string) *script.ObjectGroup
	WObjectTypeByID    func(id string) script.ObjectType
	WOnPlayerJoin      func(fnc func(p script.Player))
	WOnPlayerLeave     func(fnc func(p script.Player))
	WPlayers           func() []script.Player
	WTime              func() time.Duration
	WWallAt            func(pos types.Pointf) script.Wall
	WWallAtGrid        func(pos image.Point) script.Wall
	WWallGroupByID     func(id string) *script.WallGroup
	WWallNear          func(pos types.Pointf) script.Wall
	WWaypointByID      func(id string) script.Waypoint
	WWaypointGroupByID func(id string) *script.WaypointGroup
}

func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Game) AudioEffect(name string, pos script.Positioner) {
	W.WAudioEffect(name, pos)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Game) BlindPlayers(blind bool) {
	W.WBlindPlayers(blind)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Game) CinemaPlayers(v bool) {
	W.WCinemaPlayers(v)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Game) Console(error bool) script.Printer {
	return W.WConsole(error)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Game) Frame() int {
	return W.WFrame()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Game) Global() script.Printer {
	return W.WGlobal()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Game) HostPlayer() script.Player {
	return W.WHostPlayer()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Game) NoxScript() ns.Implementation {
	return W.WNoxScript()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Game) ObjectByID(id string) script.Object {
	return W.WObjectByID(id)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Game) ObjectGroupByID(id string) *script.ObjectGroup {
	return W.WObjectGroupByID(id)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Game) ObjectTypeByID(id string) script.ObjectType {
	return W.WObjectTypeByID(id)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Game) OnPlayerJoin(fnc func(p script.Player)) {
	W.WOnPlayerJoin(fnc)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Game) OnPlayerLeave(fnc func(p script.Player)) {
	W.WOnPlayerLeave(fnc)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Game) Players() []script.Player {
	return W.WPlayers()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Game) Time() time.Duration {
	return W.WTime()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Game) WallAt(pos types.Pointf) script.Wall {
	return W.WWallAt(pos)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Game) WallAtGrid(pos image.Point) script.Wall {
	return W.WWallAtGrid(pos)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Game) WallGroupByID(id string) *script.WallGroup {
	return W.WWallGroupByID(id)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Game) WallNear(pos types.Pointf) script.Wall {
	return W.WWallNear(pos)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Game) WaypointByID(id string) script.Waypoint {
	return W.WWaypointByID(id)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Game) WaypointGroupByID(id string) *script.WaypointGroup {
	return W.WWaypointGroupByID(id)
}

// _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Handle is an interface wrapper for Handle type
type _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Handle struct {
	IValue    interface{}
	WScriptID func() int
}

func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Handle) ScriptID() int {
	return W.WScriptID()
}

// _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation is an interface wrapper for Implementation type
type _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation struct {
	IValue               interface{}
	WAudioEvent          func(audio audio.Name, p script.Positioner)
	WAutoSave            func()
	WBecomeEnemy         func(obj ns.Obj)
	WBecomePet           func(obj ns.Obj)
	WBlind               func()
	WCancelDialog        func(obj ns.Obj)
	WCastSpell           func(spell spell.Spell, source script.Positioner, target script.Positioner)
	WClearMessages       func(player ns.Obj)
	WCreateObject        func(typ string, pos script.Positioner) ns.Obj
	WDeathScreen         func(which int)
	WDestroyEveryChat    func()
	WEffect              func(effect effect.Effect, p1 script.Positioner, p2 script.Positioner)
	WEndGame             func(class player.Class)
	WGetAnswer           func(obj ns.Obj) ns.DialogAnswer
	WGetCaller           func() ns.Obj
	WGetCharacterData    func(field int) int
	WGetHost             func() ns.Obj
	WGetQuestStatus      func(name string) int
	WGetQuestStatusFloat func(name string) float32
	WGetTrigger          func() ns.Obj
	WImmediateBlind      func()
	WIsCaller            func(obj ns.Obj) bool
	WIsCrown             func(obj ns.Obj) bool
	WIsGameBall          func(obj ns.Obj) bool
	WIsSummoned          func(obj ns.Obj) bool
	WIsTalking           func() bool
	WIsTrading           func() bool
	WIsTrigger           func(obj ns.Obj) bool
	WJournalDelete       func(obj ns.Obj, message string)
	WJournalEdit         func(obj ns.Obj, message string, typ ns.EntryType)
	WJournalEntry        func(obj ns.Obj, message string, typ ns.EntryType)
	WMakeEnemy           func(obj ns.Obj)
	WMakeFriendly        func(obj ns.Obj)
	WMusic               func(music int, volume int)
	WMusicEvent          func()
	WMusicPopEvent       func()
	WMusicPushEvent      func()
	WNewTimer            func(dt script.Duration, fnc any, args ...any) ns.Timer
	WNoWallSound         func(noWallSound bool)
	WObject              func(name string) ns.Obj
	WObjectGroup         func(name string) ns.ObjGroup
	WPrint               func(message string)
	WPrintToAll          func(message string)
	WRandom              func(min int, max int) int
	WRandomFloat         func(min float32, max float32) float32
	WResetQuestStatus    func(name string)
	WSetDialog           func(obj ns.Obj, typ ns.DialogType, start any, end any)
	WSetHalberd          func(upgrade ns.HalberdLevel)
	WSetQuestStatus      func(status int, name string)
	WSetQuestStatusFloat func(status float32, name string)
	WSetShopkeeperText   func(obj ns.Obj, text string)
	WStartDialog         func(obj ns.Obj, other ns.Obj)
	WStartupScreen       func(which int)
	WStopScript          func(value any)
	WStoryPic            func(obj ns.Obj, name string)
	WTellStory           func(audio audio.Name, story string)
	WUnBlind             func()
	WUnknownb8           func(id int) bool
	WUnknownb9           func(id int) bool
	WUnknownc4           func()
	WUnused1f            func(id int)
	WUnused20            func(id int)
	WUnused50            func()
	WUnused58            func(arg1 int, arg2 int)
	WUnused59            func(arg1 int, arg2 int)
	WUnused5a            func(arg1 int, arg2 int)
	WUnused5b            func(arg1 int, arg2 int)
	WUnused5c            func(arg1 int, arg2 int)
	WUnused5d            func(arg1 int, arg2 int)
	WUnused5e            func(str string) int
	WUnused74            func(arg1 int, arg2 int)
	WWall                func(x int, y int) ns.WallObj
	WWallGroup           func(name string) ns.WallGroupObj
	WWaypoint            func(name string) ns.WaypointObj
	WWaypointGroup       func(name string) ns.WaypointGroupObj
	WWideScreen          func(enable bool)
}

func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) AudioEvent(audio audio.Name, p script.Positioner) {
	W.WAudioEvent(audio, p)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) AutoSave() {
	W.WAutoSave()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) BecomeEnemy(obj ns.Obj) {
	W.WBecomeEnemy(obj)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) BecomePet(obj ns.Obj) {
	W.WBecomePet(obj)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) Blind() {
	W.WBlind()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) CancelDialog(obj ns.Obj) {
	W.WCancelDialog(obj)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) CastSpell(spell spell.Spell, source script.Positioner, target script.Positioner) {
	W.WCastSpell(spell, source, target)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) ClearMessages(player ns.Obj) {
	W.WClearMessages(player)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) CreateObject(typ string, pos script.Positioner) ns.Obj {
	return W.WCreateObject(typ, pos)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) DeathScreen(which int) {
	W.WDeathScreen(which)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) DestroyEveryChat() {
	W.WDestroyEveryChat()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) Effect(effect effect.Effect, p1 script.Positioner, p2 script.Positioner) {
	W.WEffect(effect, p1, p2)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) EndGame(class player.Class) {
	W.WEndGame(class)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) GetAnswer(obj ns.Obj) ns.DialogAnswer {
	return W.WGetAnswer(obj)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) GetCaller() ns.Obj {
	return W.WGetCaller()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) GetCharacterData(field int) int {
	return W.WGetCharacterData(field)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) GetHost() ns.Obj {
	return W.WGetHost()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) GetQuestStatus(name string) int {
	return W.WGetQuestStatus(name)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) GetQuestStatusFloat(name string) float32 {
	return W.WGetQuestStatusFloat(name)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) GetTrigger() ns.Obj {
	return W.WGetTrigger()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) ImmediateBlind() {
	W.WImmediateBlind()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) IsCaller(obj ns.Obj) bool {
	return W.WIsCaller(obj)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) IsCrown(obj ns.Obj) bool {
	return W.WIsCrown(obj)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) IsGameBall(obj ns.Obj) bool {
	return W.WIsGameBall(obj)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) IsSummoned(obj ns.Obj) bool {
	return W.WIsSummoned(obj)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) IsTalking() bool {
	return W.WIsTalking()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) IsTrading() bool {
	return W.WIsTrading()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) IsTrigger(obj ns.Obj) bool {
	return W.WIsTrigger(obj)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) JournalDelete(obj ns.Obj, message string) {
	W.WJournalDelete(obj, message)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) JournalEdit(obj ns.Obj, message string, typ ns.EntryType) {
	W.WJournalEdit(obj, message, typ)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) JournalEntry(obj ns.Obj, message string, typ ns.EntryType) {
	W.WJournalEntry(obj, message, typ)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) MakeEnemy(obj ns.Obj) {
	W.WMakeEnemy(obj)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) MakeFriendly(obj ns.Obj) {
	W.WMakeFriendly(obj)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) Music(music int, volume int) {
	W.WMusic(music, volume)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) MusicEvent() {
	W.WMusicEvent()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) MusicPopEvent() {
	W.WMusicPopEvent()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) MusicPushEvent() {
	W.WMusicPushEvent()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) NewTimer(dt script.Duration, fnc any, args ...any) ns.Timer {
	return W.WNewTimer(dt, fnc, args...)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) NoWallSound(noWallSound bool) {
	W.WNoWallSound(noWallSound)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) Object(name string) ns.Obj {
	return W.WObject(name)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) ObjectGroup(name string) ns.ObjGroup {
	return W.WObjectGroup(name)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) Print(message string) {
	W.WPrint(message)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) PrintToAll(message string) {
	W.WPrintToAll(message)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) Random(min int, max int) int {
	return W.WRandom(min, max)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) RandomFloat(min float32, max float32) float32 {
	return W.WRandomFloat(min, max)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) ResetQuestStatus(name string) {
	W.WResetQuestStatus(name)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) SetDialog(obj ns.Obj, typ ns.DialogType, start any, end any) {
	W.WSetDialog(obj, typ, start, end)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) SetHalberd(upgrade ns.HalberdLevel) {
	W.WSetHalberd(upgrade)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) SetQuestStatus(status int, name string) {
	W.WSetQuestStatus(status, name)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) SetQuestStatusFloat(status float32, name string) {
	W.WSetQuestStatusFloat(status, name)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) SetShopkeeperText(obj ns.Obj, text string) {
	W.WSetShopkeeperText(obj, text)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) StartDialog(obj ns.Obj, other ns.Obj) {
	W.WStartDialog(obj, other)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) StartupScreen(which int) {
	W.WStartupScreen(which)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) StopScript(value any) {
	W.WStopScript(value)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) StoryPic(obj ns.Obj, name string) {
	W.WStoryPic(obj, name)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) TellStory(audio audio.Name, story string) {
	W.WTellStory(audio, story)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) UnBlind() {
	W.WUnBlind()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) Unknownb8(id int) bool {
	return W.WUnknownb8(id)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) Unknownb9(id int) bool {
	return W.WUnknownb9(id)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) Unknownc4() {
	W.WUnknownc4()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) Unused1f(id int) {
	W.WUnused1f(id)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) Unused20(id int) {
	W.WUnused20(id)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) Unused50() {
	W.WUnused50()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) Unused58(arg1 int, arg2 int) {
	W.WUnused58(arg1, arg2)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) Unused59(arg1 int, arg2 int) {
	W.WUnused59(arg1, arg2)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) Unused5a(arg1 int, arg2 int) {
	W.WUnused5a(arg1, arg2)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) Unused5b(arg1 int, arg2 int) {
	W.WUnused5b(arg1, arg2)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) Unused5c(arg1 int, arg2 int) {
	W.WUnused5c(arg1, arg2)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) Unused5d(arg1 int, arg2 int) {
	W.WUnused5d(arg1, arg2)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) Unused5e(str string) int {
	return W.WUnused5e(str)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) Unused74(arg1 int, arg2 int) {
	W.WUnused74(arg1, arg2)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) Wall(x int, y int) ns.WallObj {
	return W.WWall(x, y)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) WallGroup(name string) ns.WallGroupObj {
	return W.WWallGroup(name)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) Waypoint(name string) ns.WaypointObj {
	return W.WWaypoint(name)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) WaypointGroup(name string) ns.WaypointGroupObj {
	return W.WWaypointGroup(name)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Implementation) WideScreen(enable bool) {
	W.WWideScreen(enable)
}

// _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj is an interface wrapper for Obj type
type _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj struct {
	IValue             interface{}
	WAggressionLevel   func(level float32)
	WApplyForce        func(force types.Pointf)
	WAttack            func(target script.Positioner)
	WAwardSpell        func(spell spell.Spell) bool
	WCanSee            func(obj ns.Obj) bool
	WChangeGold        func(delta int)
	WChangeScore       func(score int)
	WChat              func(message string)
	WChatTimer         func(message string, dt script.Duration)
	WClass             func() object.Class
	WCreateMover       func(wp ns.WaypointObj, speed float32) ns.Obj
	WCurrentHealth     func() int
	WDamage            func(source ns.Obj, amount int, typ damage.Type)
	WDelete            func()
	WDeleteAfter       func(dt script.Duration)
	WDestroyChat       func()
	WDirection         func() int
	WDrop              func(item ns.Obj) bool
	WEnable            func(enable bool)
	WEnchant           func(enchant enchant.Enchant, dt script.Duration)
	WEnchantOff        func(enchant enchant.Enchant)
	WFlee              func(target script.Positioner, dt script.Duration)
	WFollow            func(target script.Positioner)
	WFreeze            func(freeze bool)
	WGetElevatorStatus func() int
	WGetGold           func() int
	WGetHolder         func() ns.Obj
	WGetLastItem       func() ns.Obj
	WGetPreviousItem   func() ns.Obj
	WGetScore          func() int
	WGiveXp            func(xp float32)
	WGuard             func(p1 types.Pointf, p2 types.Pointf, distance float32)
	WHasClass          func(class class.Class) bool
	WHasEnchant        func(enchant enchant.Enchant) bool
	WHasItem           func(item ns.Obj) bool
	WHasOwner          func(owner ns.Obj) bool
	WHasOwnerIn        func(owners ns.ObjGroup) bool
	WHasSubclass       func(subclass subclass.SubClass) bool
	WHitMelee          func(p types.Pointf)
	WHitRanged         func(p types.Pointf)
	WHunt              func()
	WIdle              func()
	WIsAttackedBy      func(by ns.Obj) bool
	WIsEnabled         func() bool
	WIsLocked          func() bool
	WLock              func(lock bool)
	WLookAtDirection   func(dir int)
	WLookAtObject      func(target script.Positioner)
	WLookWithAngle     func(angle int)
	WMaxHealth         func() int
	WMove              func(wp ns.WaypointObj)
	WOnEvent           func(event ns.ObjectEvent, fnc any)
	WPause             func(dt script.Duration)
	WPickup            func(item ns.Obj) bool
	WPos               func() types.Pointf
	WPushTo            func(pos script.Positioner, force float32)
	WRaiseZombie       func()
	WRestoreHealth     func(amount int)
	WResumeLevel       func(percent float32)
	WRetreatLevel      func(percent float32)
	WReturn            func()
	WScriptID          func() int
	WSetOwner          func(owner ns.Obj)
	WSetOwners         func(owners ns.ObjGroup)
	WSetPos            func(p types.Pointf)
	WSetRoamFlag       func(flags int)
	WSetZ              func(z float32)
	WToggle            func() bool
	WTrapSpells        func(spell1 spell.Spell, spell2 spell.Spell, spell3 spell.Spell)
	WWalkTo            func(p types.Pointf)
	WWander            func()
	WZ                 func() float32
	WZombieStayDown    func()
}

func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) AggressionLevel(level float32) {
	W.WAggressionLevel(level)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) ApplyForce(force types.Pointf) {
	W.WApplyForce(force)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) Attack(target script.Positioner) {
	W.WAttack(target)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) AwardSpell(spell spell.Spell) bool {
	return W.WAwardSpell(spell)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) CanSee(obj ns.Obj) bool {
	return W.WCanSee(obj)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) ChangeGold(delta int) {
	W.WChangeGold(delta)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) ChangeScore(score int) {
	W.WChangeScore(score)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) Chat(message string) {
	W.WChat(message)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) ChatTimer(message string, dt script.Duration) {
	W.WChatTimer(message, dt)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) Class() object.Class {
	return W.WClass()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) CreateMover(wp ns.WaypointObj, speed float32) ns.Obj {
	return W.WCreateMover(wp, speed)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) CurrentHealth() int {
	return W.WCurrentHealth()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) Damage(source ns.Obj, amount int, typ damage.Type) {
	W.WDamage(source, amount, typ)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) Delete() {
	W.WDelete()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) DeleteAfter(dt script.Duration) {
	W.WDeleteAfter(dt)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) DestroyChat() {
	W.WDestroyChat()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) Direction() int {
	return W.WDirection()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) Drop(item ns.Obj) bool {
	return W.WDrop(item)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) Enable(enable bool) {
	W.WEnable(enable)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) Enchant(enchant enchant.Enchant, dt script.Duration) {
	W.WEnchant(enchant, dt)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) EnchantOff(enchant enchant.Enchant) {
	W.WEnchantOff(enchant)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) Flee(target script.Positioner, dt script.Duration) {
	W.WFlee(target, dt)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) Follow(target script.Positioner) {
	W.WFollow(target)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) Freeze(freeze bool) {
	W.WFreeze(freeze)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) GetElevatorStatus() int {
	return W.WGetElevatorStatus()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) GetGold() int {
	return W.WGetGold()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) GetHolder() ns.Obj {
	return W.WGetHolder()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) GetLastItem() ns.Obj {
	return W.WGetLastItem()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) GetPreviousItem() ns.Obj {
	return W.WGetPreviousItem()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) GetScore() int {
	return W.WGetScore()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) GiveXp(xp float32) {
	W.WGiveXp(xp)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) Guard(p1 types.Pointf, p2 types.Pointf, distance float32) {
	W.WGuard(p1, p2, distance)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) HasClass(class class.Class) bool {
	return W.WHasClass(class)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) HasEnchant(enchant enchant.Enchant) bool {
	return W.WHasEnchant(enchant)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) HasItem(item ns.Obj) bool {
	return W.WHasItem(item)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) HasOwner(owner ns.Obj) bool {
	return W.WHasOwner(owner)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) HasOwnerIn(owners ns.ObjGroup) bool {
	return W.WHasOwnerIn(owners)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) HasSubclass(subclass subclass.SubClass) bool {
	return W.WHasSubclass(subclass)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) HitMelee(p types.Pointf) {
	W.WHitMelee(p)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) HitRanged(p types.Pointf) {
	W.WHitRanged(p)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) Hunt() {
	W.WHunt()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) Idle() {
	W.WIdle()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) IsAttackedBy(by ns.Obj) bool {
	return W.WIsAttackedBy(by)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) IsEnabled() bool {
	return W.WIsEnabled()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) IsLocked() bool {
	return W.WIsLocked()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) Lock(lock bool) {
	W.WLock(lock)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) LookAtDirection(dir int) {
	W.WLookAtDirection(dir)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) LookAtObject(target script.Positioner) {
	W.WLookAtObject(target)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) LookWithAngle(angle int) {
	W.WLookWithAngle(angle)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) MaxHealth() int {
	return W.WMaxHealth()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) Move(wp ns.WaypointObj) {
	W.WMove(wp)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) OnEvent(event ns.ObjectEvent, fnc any) {
	W.WOnEvent(event, fnc)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) Pause(dt script.Duration) {
	W.WPause(dt)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) Pickup(item ns.Obj) bool {
	return W.WPickup(item)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) Pos() types.Pointf {
	return W.WPos()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) PushTo(pos script.Positioner, force float32) {
	W.WPushTo(pos, force)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) RaiseZombie() {
	W.WRaiseZombie()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) RestoreHealth(amount int) {
	W.WRestoreHealth(amount)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) ResumeLevel(percent float32) {
	W.WResumeLevel(percent)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) RetreatLevel(percent float32) {
	W.WRetreatLevel(percent)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) Return() {
	W.WReturn()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) ScriptID() int {
	return W.WScriptID()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) SetOwner(owner ns.Obj) {
	W.WSetOwner(owner)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) SetOwners(owners ns.ObjGroup) {
	W.WSetOwners(owners)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) SetPos(p types.Pointf) {
	W.WSetPos(p)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) SetRoamFlag(flags int) {
	W.WSetRoamFlag(flags)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) SetZ(z float32) {
	W.WSetZ(z)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) Toggle() bool {
	return W.WToggle()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) TrapSpells(spell1 spell.Spell, spell2 spell.Spell, spell3 spell.Spell) {
	W.WTrapSpells(spell1, spell2, spell3)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) WalkTo(p types.Pointf) {
	W.WWalkTo(p)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) Wander() {
	W.WWander()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) Z() float32 {
	return W.WZ()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Obj) ZombieStayDown() {
	W.WZombieStayDown()
}

// _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup is an interface wrapper for ObjGroup type
type _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup struct {
	IValue           interface{}
	WAggressionLevel func(group ns.ObjGroup, level float32)
	WAttack          func(target script.Positioner)
	WAwardSpell      func(spell spell.Spell)
	WCreateMover     func(wp ns.WaypointObj, speed float32)
	WDamage          func(source ns.Obj, amount int, typ damage.Type)
	WDelete          func()
	WEachObject      func(recursive bool, fnc func(obj ns.Obj) bool)
	WEnable          func(enable bool)
	WEnchant         func(enchant enchant.Enchant, dt script.Duration)
	WFlee            func(target script.Positioner, dt script.Duration)
	WFollow          func(target script.Positioner)
	WGuard           func(p1 types.Pointf, p2 types.Pointf, distance float32)
	WHasOwner        func(owner ns.Obj) bool
	WHasOwnerIn      func(owners ns.ObjGroup) bool
	WHitMelee        func(p types.Pointf)
	WHitRanged       func(p types.Pointf)
	WHunt            func()
	WIdle            func()
	WLookAtDirection func(dir int)
	WMove            func(wp ns.WaypointObj)
	WPause           func(dt script.Duration)
	WRaiseZombie     func()
	WResumeLevel     func(percent float32)
	WRetreatLevel    func(percent float32)
	WScriptID        func() int
	WSetOwner        func(owner ns.Obj)
	WSetOwners       func(owners ns.ObjGroup)
	WSetRoamFlag     func(flags int)
	WToggle          func() bool
	WWalkTo          func(p types.Pointf)
	WWander          func()
	WZombieStayDown  func()
}

func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) AggressionLevel(group ns.ObjGroup, level float32) {
	W.WAggressionLevel(group, level)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) Attack(target script.Positioner) {
	W.WAttack(target)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) AwardSpell(spell spell.Spell) {
	W.WAwardSpell(spell)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) CreateMover(wp ns.WaypointObj, speed float32) {
	W.WCreateMover(wp, speed)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) Damage(source ns.Obj, amount int, typ damage.Type) {
	W.WDamage(source, amount, typ)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) Delete() {
	W.WDelete()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) EachObject(recursive bool, fnc func(obj ns.Obj) bool) {
	W.WEachObject(recursive, fnc)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) Enable(enable bool) {
	W.WEnable(enable)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) Enchant(enchant enchant.Enchant, dt script.Duration) {
	W.WEnchant(enchant, dt)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) Flee(target script.Positioner, dt script.Duration) {
	W.WFlee(target, dt)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) Follow(target script.Positioner) {
	W.WFollow(target)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) Guard(p1 types.Pointf, p2 types.Pointf, distance float32) {
	W.WGuard(p1, p2, distance)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) HasOwner(owner ns.Obj) bool {
	return W.WHasOwner(owner)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) HasOwnerIn(owners ns.ObjGroup) bool {
	return W.WHasOwnerIn(owners)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) HitMelee(p types.Pointf) {
	W.WHitMelee(p)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) HitRanged(p types.Pointf) {
	W.WHitRanged(p)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) Hunt() {
	W.WHunt()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) Idle() {
	W.WIdle()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) LookAtDirection(dir int) {
	W.WLookAtDirection(dir)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) Move(wp ns.WaypointObj) {
	W.WMove(wp)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) Pause(dt script.Duration) {
	W.WPause(dt)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) RaiseZombie() {
	W.WRaiseZombie()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) ResumeLevel(percent float32) {
	W.WResumeLevel(percent)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) RetreatLevel(percent float32) {
	W.WRetreatLevel(percent)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) ScriptID() int {
	return W.WScriptID()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) SetOwner(owner ns.Obj) {
	W.WSetOwner(owner)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) SetOwners(owners ns.ObjGroup) {
	W.WSetOwners(owners)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) SetRoamFlag(flags int) {
	W.WSetRoamFlag(flags)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) Toggle() bool {
	return W.WToggle()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) WalkTo(p types.Pointf) {
	W.WWalkTo(p)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) Wander() {
	W.WWander()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_ObjGroup) ZombieStayDown() {
	W.WZombieStayDown()
}

// _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Timer is an interface wrapper for Timer type
type _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Timer struct {
	IValue    interface{}
	WCancel   func() bool
	WScriptID func() int
}

func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Timer) Cancel() bool {
	return W.WCancel()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_Timer) ScriptID() int {
	return W.WScriptID()
}

// _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WallGroupObj is an interface wrapper for WallGroupObj type
type _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WallGroupObj struct {
	IValue    interface{}
	WDestroy  func()
	WEachWall func(recursive bool, fnc func(obj ns.WallObj) bool)
	WEnable   func(enable bool)
	WScriptID func() int
	WToggle   func() bool
}

func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WallGroupObj) Destroy() {
	W.WDestroy()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WallGroupObj) EachWall(recursive bool, fnc func(obj ns.WallObj) bool) {
	W.WEachWall(recursive, fnc)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WallGroupObj) Enable(enable bool) {
	W.WEnable(enable)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WallGroupObj) ScriptID() int {
	return W.WScriptID()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WallGroupObj) Toggle() bool {
	return W.WToggle()
}

// _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WallObj is an interface wrapper for WallObj type
type _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WallObj struct {
	IValue     interface{}
	WDestroy   func()
	WEnable    func(enable bool)
	WIsEnabled func() bool
	WScriptID  func() int
	WToggle    func() bool
}

func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WallObj) Destroy() {
	W.WDestroy()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WallObj) Enable(enable bool) {
	W.WEnable(enable)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WallObj) IsEnabled() bool {
	return W.WIsEnabled()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WallObj) ScriptID() int {
	return W.WScriptID()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WallObj) Toggle() bool {
	return W.WToggle()
}

// _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WaypointGroupObj is an interface wrapper for WaypointGroupObj type
type _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WaypointGroupObj struct {
	IValue        interface{}
	WEachWaypoint func(recursive bool, fnc func(obj ns.WaypointObj) bool)
	WEnable       func(enable bool)
	WScriptID     func() int
	WToggle       func() bool
}

func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WaypointGroupObj) EachWaypoint(recursive bool, fnc func(obj ns.WaypointObj) bool) {
	W.WEachWaypoint(recursive, fnc)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WaypointGroupObj) Enable(enable bool) {
	W.WEnable(enable)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WaypointGroupObj) ScriptID() int {
	return W.WScriptID()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WaypointGroupObj) Toggle() bool {
	return W.WToggle()
}

// _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WaypointObj is an interface wrapper for WaypointObj type
type _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WaypointObj struct {
	IValue     interface{}
	WEnable    func(enable bool)
	WIsEnabled func() bool
	WPos       func() types.Pointf
	WScriptID  func() int
	WSetPos    func(p types.Pointf)
	WToggle    func() bool
}

func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WaypointObj) Enable(enable bool) {
	W.WEnable(enable)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WaypointObj) IsEnabled() bool {
	return W.WIsEnabled()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WaypointObj) Pos() types.Pointf {
	return W.WPos()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WaypointObj) ScriptID() int {
	return W.WScriptID()
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WaypointObj) SetPos(p types.Pointf) {
	W.WSetPos(p)
}
func (W _github_com_noxworld_dev_opennox_lib_script_noxscript_ns_WaypointObj) Toggle() bool {
	return W.WToggle()
}
